// Generated by dts-bundle v0.3.0

declare module 'log4ts' {
    export { default as Logger } from "__log4ts/Logger";
    export { default as LoggerConfig } from "__log4ts/LoggerConfig";
}

declare module '__log4ts/Logger' {
    import LoggerConfig from "__log4ts/LoggerConfig";
    export default class Logger {
        constructor(tag?: string);
        log(message: string): void;
        info(message: string): void;
        fatal(message: string): void;
        error(message: string): void;
        debug(message: string): void;
        warn(message: string): void;
        trace(message: string): void;
        static setConfig(config: LoggerConfig): void;
        static getLogger(tag?: string): any;
    }
}

declare module '__log4ts/LoggerConfig' {
    import { IAppender } from "__log4ts/IAppender";
    import { LogLevel } from "__log4ts/LogLevel";
    export default class LoggerConfig {
        constructor(appender?: IAppender, level?: LogLevel);
        addAppender(appender: IAppender): void;
        setLevel(level: LogLevel): void;
        getAppenders(): IAppender[];
        getLevel(): LogLevel;
        static createFromJson(json: ConfigJson): LoggerConfig;
    }
    export interface ConfigJson {
        layouts: ConfigJsonLayout[];
        level: "ALL" | "TRACE" | "DEBUG" | "INFO" | "WARN" | "ERROR" | "FATAL" | "OFF";
    }
    export interface ConfigJsonLayout {
        type: "basic" | "html";
        appenders: ConfigJsonAppender[];
    }
    export interface ConfigJsonAppender {
        type: "console" | "dom";
        options?: ConfigJsonDomAppenderOptions;
    }
    export interface ConfigJsonDomAppenderOptions {
        container_id: string;
        escape_html?: boolean;
    }
}

declare module '__log4ts/IAppender' {
    import { ILayout } from "__log4ts/ILayout";
    import { LogEntry } from "__log4ts/LogEntry";
    import { ILayoutFunction } from "__log4ts/ILayout";
    export interface IAppender {
        setLayout(layout: ILayout): any;
        setLayoutFunction(layout: ILayoutFunction): any;
        append(entry: LogEntry): any;
        clear(): any;
    }
}

declare module '__log4ts/LogLevel' {
    export enum LogLevel {
        ALL = 0,
        TRACE = 1,
        DEBUG = 2,
        INFO = 3,
        WARN = 4,
        ERROR = 5,
        FATAL = 6,
        OFF = 7,
    }
    export function logLevelToString(level: LogLevel): string;
}

declare module '__log4ts/ILayout' {
    import { LogEntry } from "__log4ts/LogEntry";
    export interface ILayout {
        format(entry: LogEntry): string;
    }
    export interface ILayoutFunction {
        (entry: LogEntry): string;
    }
}

declare module '__log4ts/LogEntry' {
    import { LogLevel } from "__log4ts/LogLevel";
    export interface LogEntry {
        level: LogLevel;
        time: Date;
        message: string;
        tag: string;
    }
}

